DIGEST 7bde2421614aedd7ef95f3a933c35ab0
FPoly
R189:193 Lists <> <> lib
ind 1131:1138 <> boollist
constr 1157:1164 <> bool_nil
constr 1184:1192 <> bool_cons
R1168:1175 Poly <> boollist:1 ind
R1200:1203 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1196:1199 Basics <> bool ind
R1212:1215 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1204:1211 Poly <> boollist:1 ind
R1216:1223 Poly <> boollist:1 ind
ind 1733:1736 <> list
constr 1764:1766 <> nil
constr 1784:1787 <> cons
binder 1739:1739 <> X:3
R1770:1773 Poly <> list:4 ind
R1775:1775 Poly <> X:3 var
R1792:1795 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1791:1791 Poly <> X:3 var
R1802:1805 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1796:1799 Poly <> list:4 ind
R1801:1801 Poly <> X:3 var
R1806:1809 Poly <> list:4 ind
R1811:1811 Poly <> X:3 var
R3063:3065 Poly <> nil constr
R3121:3124 Poly <> cons constr
R4033:4036 Poly <> cons constr
R4038:4040 Coq.Init.Datatypes <> nat ind
R4045:4048 Poly <> cons constr
R4050:4052 Coq.Init.Datatypes <> nat ind
R4057:4059 Poly <> nil constr
R4061:4063 Coq.Init.Datatypes <> nat ind
def 4446:4451 <> repeat
binder 4454:4454 <> X:6
R4469:4469 Poly <> X:6 var
binder 4465:4465 <> x:7
R4481:4483 Coq.Init.Datatypes <> nat ind
binder 4473:4477 <> count:8
R4488:4491 Poly <> list ind
R4493:4493 Poly <> X:6 var
R4509:4513 Poly <> count:8 var
R4532:4534 Poly <> nil constr
R4536:4536 Poly <> X:6 var
R4545:4545 Coq.Init.Datatypes <> S constr
R4557:4560 Poly <> cons constr
R4562:4562 Poly <> X:6 var
R4564:4564 Poly <> x:7 var
R4567:4572 Poly <> repeat:9 def
R4576:4576 Poly <> x:7 var
R4574:4574 Poly <> X:6 var
def 4740:4751 <> test_repeat1
R4774:4776 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4760:4765 Poly <> repeat def
R4767:4769 Coq.Init.Datatypes <> nat ind
R4777:4780 Poly <> cons constr
R4782:4784 Coq.Init.Datatypes <> nat ind
R4789:4792 Poly <> cons constr
R4794:4796 Coq.Init.Datatypes <> nat ind
R4801:4803 Poly <> nil constr
R4805:4807 Coq.Init.Datatypes <> nat ind
def 4985:4996 <> test_repeat2
R5024:5026 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5005:5010 Poly <> repeat def
R5012:5015 Basics <> bool ind
R5017:5021 Basics <> false constr
R5027:5030 Poly <> cons constr
R5032:5035 Basics <> bool ind
R5037:5041 Basics <> false constr
R5044:5046 Poly <> nil constr
R5048:5051 Basics <> bool ind
mod 5102:5114 <> MumbleGrumble
ind 5254:5259 MumbleGrumble mumble
constr 5278:5278 MumbleGrumble a
constr 5296:5296 MumbleGrumble b
constr 5331:5331 MumbleGrumble c
R5282:5287 Poly <> mumble:11 ind
R5306:5309 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5300:5305 Poly <> mumble:11 ind
R5313:5316 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5310:5312 Coq.Init.Datatypes <> nat ind
R5317:5322 Poly <> mumble:11 ind
R5335:5340 Poly <> mumble:11 ind
ind 5360:5366 MumbleGrumble grumble
constr 5394:5394 MumbleGrumble d
constr 5425:5425 MumbleGrumble e
binder 5369:5369 <> X:13
R5404:5407 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5398:5403 Poly MumbleGrumble mumble ind
R5408:5414 Poly <> grumble:14 ind
R5416:5416 Poly <> X:13 var
R5430:5433 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5429:5429 Poly <> X:13 var
R5434:5440 Poly <> grumble:14 ind
R5442:5442 Poly <> X:13 var
R5455:5455 Poly MumbleGrumble d constr
R5457:5462 Poly MumbleGrumble mumble ind
R5465:5465 Poly MumbleGrumble b constr
R5467:5467 Poly MumbleGrumble a constr
R5483:5483 Poly MumbleGrumble d constr
R5485:5488 Basics <> bool ind
R5491:5491 Poly MumbleGrumble b constr
R5493:5493 Poly MumbleGrumble a constr
R5509:5509 Poly MumbleGrumble e constr
R5511:5514 Basics <> bool ind
R5516:5519 Basics <> true constr
R5532:5532 Poly MumbleGrumble e constr
R5534:5539 Poly MumbleGrumble mumble ind
R5542:5542 Poly MumbleGrumble b constr
R5544:5544 Poly MumbleGrumble c constr
R5559:5559 Poly MumbleGrumble c constr
R5892:5904 Poly MumbleGrumble <> mod
def 6209:6215 <> repeat'
binder 6217:6217 <> X:16
binder 6219:6219 <> x:17
binder 6221:6225 <> count:18
R6229:6232 Poly <> list ind
R6234:6234 Poly <> X:16 var
R6250:6254 Poly <> count:18 var
R6280:6282 Poly <> nil constr
R6284:6284 Poly <> X:16 var
R6293:6293 Coq.Init.Datatypes <> S constr
R6305:6308 Poly <> cons constr
R6310:6310 Poly <> X:16 var
R6312:6312 Poly <> x:17 var
R6315:6321 Poly <> repeat':19 def
R6325:6325 Poly <> x:17 var
R6323:6323 Poly <> X:16 var
R6440:6446 Poly <> repeat' def
R6508:6513 Poly <> repeat def
def 9224:9231 <> repeat''
binder 9233:9233 <> X:21
binder 9235:9235 <> x:22
binder 9237:9241 <> count:23
R9245:9248 Poly <> list ind
R9250:9250 Poly <> X:21 var
R9266:9270 Poly <> count:23 var
R9296:9298 Poly <> nil constr
R9309:9309 Coq.Init.Datatypes <> S constr
R9321:9324 Poly <> cons constr
R9328:9328 Poly <> x:22 var
R9331:9338 Poly <> repeat'':24 def
R9342:9342 Poly <> x:22 var
def 9695:9701 <> list123
R9711:9714 Poly <> cons constr
R9716:9718 Coq.Init.Datatypes <> nat ind
R9723:9726 Poly <> cons constr
R9728:9730 Coq.Init.Datatypes <> nat ind
R9735:9738 Poly <> cons constr
R9740:9742 Coq.Init.Datatypes <> nat ind
R9747:9749 Poly <> nil constr
R9751:9753 Coq.Init.Datatypes <> nat ind
def 9839:9846 <> list123'
R9856:9859 Poly <> cons constr
R9866:9869 Poly <> cons constr
R9876:9879 Poly <> cons constr
R9886:9888 Poly <> nil constr
R10547:10549 Poly <> nil constr
R10547:10549 Poly <> nil constr
R10569:10572 Poly <> cons constr
R10569:10572 Poly <> cons constr
R10596:10601 Poly <> repeat def
R10596:10601 Poly <> repeat def
def 10700:10708 <> list123''
R10713:10716 Poly <> cons constr
R10721:10724 Poly <> cons constr
R10729:10732 Poly <> cons constr
R10736:10738 Poly <> nil constr
def 10946:10954 <> repeat'''
binder 10957:10957 <> X:26
R10972:10972 Poly <> X:26 var
binder 10968:10968 <> x:27
R10984:10986 Coq.Init.Datatypes <> nat ind
binder 10976:10980 <> count:28
R10991:10994 Poly <> list ind
R10996:10996 Poly <> X:26 var
R11012:11016 Poly <> count:28 var
R11042:11044 Poly <> nil constr
R11053:11053 Coq.Init.Datatypes <> S constr
R11065:11068 Poly <> cons constr
R11073:11081 Poly <> repeat''':29 def
R11083:11083 Poly <> x:27 var
R11070:11070 Poly <> x:27 var
ind 11731:11735 <> list'
constr 11763:11766 <> nil'
constr 11783:11787 <> cons'
binder 11738:11738 <> X:31
R11770:11774 Poly <> list':32 ind
R11792:11795 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11791:11791 Poly <> X:31 var
R11801:11804 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11796:11800 Poly <> list':32 ind
R11805:11809 Poly <> list':32 ind
def 12278:12280 <> app
binder 12283:12283 <> X:34
R12302:12305 Poly <> list ind
R12307:12307 Poly <> X:34 var
binder 12294:12295 <> l1:35
binder 12297:12298 <> l2:36
R12329:12332 Poly <> list ind
R12334:12334 Poly <> X:34 var
R12351:12352 Poly <> l1:35 var
R12366:12368 Poly <> nil constr
R12378:12379 Poly <> l2:36 var
R12388:12391 Poly <> cons constr
R12400:12403 Poly <> cons constr
R12408:12410 Poly <> app:37 def
R12414:12415 Poly <> l2:36 var
def 12444:12446 <> rev
binder 12449:12449 <> X:39
R12460:12463 Poly <> list ind
R12465:12465 Poly <> X:39 var
binder 12458:12458 <> l:40
R12470:12473 Poly <> list ind
R12475:12475 Poly <> X:39 var
R12491:12491 Poly <> l:40 var
R12505:12507 Poly <> nil constr
R12517:12519 Poly <> nil constr
R12528:12531 Poly <> cons constr
R12540:12542 Poly <> app def
R12553:12556 Poly <> cons constr
R12560:12562 Poly <> nil constr
R12545:12547 Poly <> rev:41 def
def 12591:12596 <> length
binder 12599:12599 <> X:43
R12614:12617 Poly <> list ind
R12619:12619 Poly <> X:43 var
binder 12610:12610 <> l:44
R12624:12626 Coq.Init.Datatypes <> nat ind
R12642:12642 Poly <> l:44 var
R12656:12658 Poly <> nil constr
R12672:12675 Poly <> cons constr
R12685:12685 Coq.Init.Datatypes <> S constr
R12688:12693 Poly <> length:45 def
def 12724:12732 <> test_rev1
R12766:12769 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12789:12789 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12741:12743 Poly <> rev def
R12746:12749 Poly <> cons constr
R12754:12757 Poly <> cons constr
R12761:12763 Poly <> nil constr
R12770:12773 Poly <> cons constr
R12778:12781 Poly <> cons constr
R12785:12787 Poly <> nil constr
def 12836:12844 <> test_rev2
R12871:12873 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12852:12854 Poly <> rev def
R12857:12860 Poly <> cons constr
R12867:12869 Poly <> nil constr
R12862:12865 Basics <> true constr
R12874:12877 Poly <> cons constr
R12884:12886 Poly <> nil constr
R12879:12882 Basics <> true constr
def 12933:12944 <> test_length1
R12984:12986 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12947:12952 Poly <> length def
R12955:12958 Poly <> cons constr
R12963:12966 Poly <> cons constr
R12971:12974 Poly <> cons constr
R12978:12980 Poly <> nil constr
def 13496:13500 <> mynil
R13505:13507 Poly <> nil constr
def 14113:14117 <> mynil
R14121:14124 Poly <> list ind
R14126:14128 Coq.Init.Datatypes <> nat ind
R14133:14135 Poly <> nil constr
R14279:14281 Poly <> nil constr
def 14302:14307 <> mynil'
R14313:14315 Poly <> nil constr
R14317:14319 Coq.Init.Datatypes <> nat ind
R14622:14625 Poly <> cons constr
not 14609:14609 <> :::x_'::'_x
R14713:14715 Poly <> nil constr
not 14704:14704 <> :::'['_']'
R14751:14754 Poly <> cons constr
R14762:14765 Poly <> cons constr
R14769:14770 Poly <> :::'['_']' not
not 14730:14730 <> :::'['_x_';'_'..'_';'_x_']'
R14803:14805 Poly <> app def
not 14790:14790 <> :::x_'++'_x
def 14953:14962 <> list123'''
R14967:14967 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R14969:14970 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R14972:14973 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R14975:14975 Poly <> :::'['_x_';'_'..'_';'_x_']' not
prf 15310:15318 <> app_nil_r
binder 15330:15330 <> X:47
R15348:15351 Poly <> list ind
R15353:15353 Poly <> X:47 var
binder 15346:15346 <> l:48
R15368:15370 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15362:15365 Poly <> :::x_'++'_x not
R15361:15361 Poly <> l:48 var
R15366:15367 Poly <> :::'['_']' not
R15371:15371 Poly <> l:48 var
prf 15531:15539 <> app_assoc
binder 15550:15550 <> A:49
R15559:15562 Poly <> list ind
R15564:15564 Poly <> A:49 var
binder 15553:15553 <> l:50
binder 15555:15555 <> m:51
binder 15557:15557 <> n:52
R15584:15586 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15574:15577 Poly <> :::x_'++'_x not
R15573:15573 Poly <> l:50 var
R15579:15582 Poly <> :::x_'++'_x not
R15578:15578 Poly <> m:51 var
R15583:15583 Poly <> n:52 var
R15587:15587 Poly <> :::x_'++'_x not
R15594:15598 Poly <> :::x_'++'_x not
R15589:15592 Poly <> :::x_'++'_x not
R15588:15588 Poly <> l:50 var
R15593:15593 Poly <> m:51 var
R15599:15599 Poly <> n:52 var
prf 15758:15767 <> app_length
binder 15779:15779 <> X:53
R15796:15799 Poly <> list ind
R15801:15801 Poly <> X:53 var
binder 15788:15789 <> l1:54
binder 15791:15792 <> l2:55
R15827:15829 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15810:15815 Poly <> length def
R15820:15823 Poly <> :::x_'++'_x not
R15818:15819 Poly <> l1:54 var
R15824:15825 Poly <> l2:55 var
R15839:15841 Basics <> ::nat_scope:x_'+'_x not
R15830:15835 Poly <> length def
R15837:15838 Poly <> l1:54 var
R15842:15847 Poly <> length def
R15849:15850 Poly <> l2:55 var
prf 16155:16167 <> rev_app_distr
binder 16177:16177 <> X:56
R16188:16191 Poly <> list ind
R16193:16193 Poly <> X:56 var
binder 16180:16181 <> l1:57
binder 16183:16184 <> l2:58
R16216:16218 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16202:16204 Poly <> rev def
R16209:16212 Poly <> :::x_'++'_x not
R16207:16208 Poly <> l1:57 var
R16213:16214 Poly <> l2:58 var
R16225:16228 Poly <> :::x_'++'_x not
R16219:16221 Poly <> rev def
R16223:16224 Poly <> l2:58 var
R16229:16231 Poly <> rev def
R16233:16234 Poly <> l1:57 var
R16327:16335 Poly <> app_nil_r thm
R16327:16335 Poly <> app_nil_r thm
R16327:16335 Poly <> app_nil_r thm
R16392:16400 Poly <> app_assoc thm
R16392:16400 Poly <> app_assoc thm
R16392:16400 Poly <> app_assoc thm
prf 16440:16453 <> rev_involutive
binder 16464:16464 <> X:59
R16485:16488 Poly <> list ind
R16490:16490 Poly <> X:59 var
binder 16481:16481 <> l:60
R16509:16511 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16498:16500 Poly <> rev def
R16503:16505 Poly <> rev def
R16507:16507 Poly <> l:60 var
R16512:16512 Poly <> l:60 var
R16627:16639 Poly <> rev_app_distr thm
R16627:16639 Poly <> rev_app_distr thm
R16627:16639 Poly <> rev_app_distr thm
ind 17020:17023 <> prod
constr 17053:17056 <> pair
binder 17026:17026 <> X:61
binder 17028:17028 <> Y:62
R17061:17064 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17060:17060 Poly <> X:61 var
R17066:17069 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17065:17065 Poly <> Y:62 var
R17070:17073 Poly <> prod:63 ind
R17077:17077 Poly <> Y:62 var
R17075:17075 Poly <> X:61 var
R17097:17100 Poly <> pair constr
R17097:17100 Poly <> pair constr
R17262:17265 Poly <> pair constr
not 17246:17246 <> :::'('_x_','_x_')'
R17416:17419 Poly <> prod ind
not 17404:17404 <> ::type_scope:x_'*'_x
def 18060:18062 <> fst
binder 18065:18065 <> X:65
binder 18067:18067 <> Y:66
R18083:18085 Poly <> ::type_scope:x_'*'_x not
R18082:18082 Poly <> X:65 var
R18086:18086 Poly <> Y:66 var
binder 18078:18078 <> p:67
R18091:18091 Poly <> X:65 var
R18107:18107 Poly <> p:67 var
R18121:18121 Poly <> :::'('_x_','_x_')' not
R18123:18124 Poly <> :::'('_x_','_x_')' not
R18126:18126 Poly <> :::'('_x_','_x_')' not
def 18161:18163 <> snd
binder 18166:18166 <> X:69
binder 18168:18168 <> Y:70
R18184:18186 Poly <> ::type_scope:x_'*'_x not
R18183:18183 Poly <> X:69 var
R18187:18187 Poly <> Y:70 var
binder 18179:18179 <> p:71
R18192:18192 Poly <> Y:70 var
R18208:18208 Poly <> p:71 var
R18222:18222 Poly <> :::'('_x_','_x_')' not
R18224:18225 Poly <> :::'('_x_','_x_')' not
R18227:18227 Poly <> :::'('_x_','_x_')' not
def 18498:18504 <> combine
binder 18507:18507 <> X:73
binder 18509:18509 <> Y:74
R18525:18528 Poly <> list ind
R18530:18530 Poly <> X:73 var
binder 18520:18521 <> lx:75
R18539:18542 Poly <> list ind
R18544:18544 Poly <> Y:74 var
binder 18534:18535 <> ly:76
R18563:18566 Poly <> list ind
R18570:18570 Poly <> ::type_scope:x_'*'_x not
R18569:18569 Poly <> X:73 var
R18571:18571 Poly <> Y:74 var
R18592:18593 Poly <> ly:76 var
R18588:18589 Poly <> lx:75 var
R18607:18608 Poly <> :::'['_']' not
R18616:18617 Poly <> :::'['_']' not
R18629:18630 Poly <> :::'['_']' not
R18635:18636 Poly <> :::'['_']' not
R18646:18649 Poly <> :::x_'::'_x not
R18655:18658 Poly <> :::x_'::'_x not
R18671:18675 Poly <> :::x_'::'_x not
R18689:18689 Poly <> :::x_'::'_x not
R18665:18665 Poly <> :::'('_x_','_x_')' not
R18667:18668 Poly <> :::'('_x_','_x_')' not
R18670:18670 Poly <> :::'('_x_','_x_')' not
R18676:18682 Poly <> combine:77 def
R19135:19141 Poly <> combine def
R19188:19194 Poly <> combine def
R19202:19202 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19208:19208 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19214:19214 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19219:19219 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19224:19224 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19203:19207 Basics <> false constr
R19209:19213 Basics <> false constr
R19215:19218 Basics <> true constr
R19220:19223 Basics <> true constr
R19196:19196 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19198:19198 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19200:19200 Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 19587:19591 <> split
binder 19594:19594 <> X:80
binder 19596:19596 <> Y:81
R19611:19614 Poly <> list ind
R19618:19618 Poly <> ::type_scope:x_'*'_x not
R19617:19617 Poly <> X:80 var
R19619:19619 Poly <> Y:81 var
binder 19607:19607 <> l:82
R19643:19643 Poly <> ::type_scope:x_'*'_x not
R19650:19654 Poly <> ::type_scope:x_'*'_x not
R19661:19661 Poly <> ::type_scope:x_'*'_x not
R19644:19647 Poly <> list ind
R19649:19649 Poly <> X:80 var
R19655:19658 Poly <> list ind
R19660:19660 Poly <> Y:81 var
R19678:19678 Poly <> l:82 var
R19693:19695 Poly <> nil constr
R19700:19700 Poly <> :::'('_x_','_x_')' not
R19704:19705 Poly <> :::'('_x_','_x_')' not
R19709:19709 Poly <> :::'('_x_','_x_')' not
R19701:19703 Poly <> nil constr
R19706:19708 Poly <> nil constr
R19720:19723 Poly <> :::x_'::'_x not
R19729:19729 Poly <> :::'('_x_','_x_')' not
R19754:19755 Poly <> :::'('_x_','_x_')' not
R19780:19780 Poly <> :::'('_x_','_x_')' not
R19730:19730 Poly <> :::x_'::'_x not
R19736:19740 Poly <> :::x_'::'_x not
R19731:19733 Poly <> fst def
R19741:19743 Poly <> fst def
R19746:19750 Poly <> split:83 def
R19756:19756 Poly <> :::x_'::'_x not
R19762:19766 Poly <> :::x_'::'_x not
R19757:19759 Poly <> snd def
R19767:19769 Poly <> snd def
R19772:19776 Poly <> split:83 def
def 19809:19818 <> test_split
R19853:19855 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19826:19830 Poly <> split def
R19832:19832 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19842:19842 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19852:19852 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19833:19833 Poly <> :::'('_x_','_x_')' not
R19835:19835 Poly <> :::'('_x_','_x_')' not
R19841:19841 Poly <> :::'('_x_','_x_')' not
R19836:19840 Basics <> false constr
R19843:19843 Poly <> :::'('_x_','_x_')' not
R19845:19845 Poly <> :::'('_x_','_x_')' not
R19851:19851 Poly <> :::'('_x_','_x_')' not
R19846:19850 Basics <> false constr
R19856:19856 Poly <> :::'('_x_','_x_')' not
R19862:19862 Poly <> :::'('_x_','_x_')' not
R19876:19876 Poly <> :::'('_x_','_x_')' not
R19857:19857 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19859:19859 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19861:19861 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19863:19863 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19869:19869 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19875:19875 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19864:19868 Basics <> false constr
R19870:19874 Basics <> false constr
ind 20201:20206 <> option
constr 20234:20237 <> Some
constr 20262:20265 <> None
binder 20209:20209 <> X:85
R20242:20245 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20241:20241 Poly <> X:85 var
R20246:20251 Poly <> option:86 ind
R20253:20253 Poly <> X:85 var
R20269:20274 Poly <> option:86 ind
R20276:20276 Poly <> X:85 var
R20296:20299 Poly <> Some constr
R20296:20299 Poly <> Some constr
R20321:20324 Poly <> None constr
R20321:20324 Poly <> None constr
def 20453:20461 <> nth_error
binder 20464:20464 <> X:88
R20479:20482 Poly <> list ind
R20484:20484 Poly <> X:88 var
binder 20475:20475 <> l:89
R20492:20494 Coq.Init.Datatypes <> nat ind
binder 20488:20488 <> n:90
R20521:20526 Poly <> option ind
R20528:20528 Poly <> X:88 var
R20544:20544 Poly <> l:89 var
R20558:20559 Poly <> :::'['_']' not
R20564:20567 Poly <> None constr
R20577:20580 Poly <> :::x_'::'_x not
R20590:20596 Basics <> beq_nat def
R20598:20598 Poly <> n:90 var
R20600:20600 Coq.Init.Datatypes <> O constr
R20619:20627 Poly <> nth_error:91 def
R20633:20636 Coq.Init.Peano <> pred syndef
R20638:20638 Poly <> n:90 var
R20607:20610 Poly <> Some constr
def 20666:20680 <> test_nth_error1
R20705:20707 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20684:20692 Poly <> nth_error def
R20694:20694 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20696:20696 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20698:20698 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20700:20700 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20702:20702 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20708:20711 Poly <> Some constr
def 20755:20769 <> test_nth_error2
R20794:20796 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20773:20781 Poly <> nth_error def
R20783:20783 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20787:20787 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20791:20791 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20784:20784 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20786:20786 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20788:20788 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20790:20790 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20797:20800 Poly <> Some constr
R20802:20802 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20804:20804 Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 20846:20860 <> test_nth_error3
R20882:20884 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20864:20872 Poly <> nth_error def
R20874:20874 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20879:20879 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20875:20878 Basics <> true constr
R20885:20888 Poly <> None constr
def 21168:21175 <> hd_error
binder 21178:21178 <> X:93
R21193:21196 Poly <> list ind
R21198:21198 Poly <> X:93 var
binder 21189:21189 <> l:94
R21203:21208 Poly <> option ind
R21210:21210 Poly <> X:93 var
R21226:21226 Poly <> l:94 var
R21240:21242 Poly <> nil constr
R21247:21250 Poly <> None constr
R21260:21263 Poly <> :::x_'::'_x not
R21269:21272 Poly <> Some constr
R21428:21435 Poly <> hd_error def
def 21453:21466 <> test_hd_error1
R21484:21486 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21470:21477 Poly <> hd_error def
R21479:21479 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R21481:21481 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R21483:21483 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R21487:21490 Poly <> Some constr
def 21555:21568 <> test_hd_error2
R21591:21594 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21572:21579 Poly <> hd_error def
R21582:21582 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R21586:21586 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R21590:21590 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R21583:21583 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R21585:21585 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R21587:21587 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R21589:21589 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R21595:21598 Poly <> Some constr
R21600:21600 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R21602:21602 Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 22367:22376 <> doit3times
binder 22379:22379 <> X:96
R22391:22392 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22390:22390 Poly <> X:96 var
R22393:22393 Poly <> X:96 var
binder 22388:22388 <> f:97
R22399:22399 Poly <> X:96 var
binder 22397:22397 <> n:98
R22404:22404 Poly <> X:96 var
R22414:22414 Poly <> f:97 var
R22417:22417 Poly <> f:97 var
R22420:22420 Poly <> f:97 var
R22422:22422 Poly <> n:98 var
R22599:22608 Poly <> doit3times def
def 22689:22703 <> test_doit3times
R22727:22729 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22706:22715 Poly <> doit3times def
R22717:22724 Basics <> minustwo def
def 22777:22792 <> test_doit3times'
R22815:22817 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22795:22804 Poly <> doit3times def
R22811:22814 Basics <> true constr
R22806:22809 Basics <> negb def
R22818:22822 Basics <> false constr
def 23246:23251 <> filter
binder 23254:23254 <> X:99
R23270:23271 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23269:23269 Poly <> X:99 var
R23272:23275 Basics <> bool ind
binder 23263:23266 <> test:100
R23281:23284 Poly <> list ind
R23286:23286 Poly <> X:99 var
binder 23279:23279 <> l:101
R23311:23314 Poly <> list ind
R23316:23316 Poly <> X:99 var
R23333:23333 Poly <> l:101 var
R23347:23348 Poly <> :::'['_']' not
R23357:23358 Poly <> :::'['_']' not
R23368:23371 Poly <> :::x_'::'_x not
R23380:23383 Poly <> test:100 var
R23451:23456 Poly <> filter:102 def
R23458:23461 Poly <> test:100 var
R23393:23397 Poly <> :::x_'::'_x not
R23411:23411 Poly <> :::x_'::'_x not
R23398:23403 Poly <> filter:102 def
R23405:23408 Poly <> test:100 var
def 23663:23674 <> test_filter1
R23699:23701 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23677:23682 Poly <> filter def
R23690:23690 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23692:23692 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23694:23694 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23696:23696 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23698:23698 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23684:23688 Basics <> evenb def
R23702:23702 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23704:23704 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23706:23706 Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 23756:23766 <> length_is_1
binder 23769:23769 <> X:104
R23784:23787 Poly <> list ind
R23789:23789 Poly <> X:104 var
binder 23780:23780 <> l:105
R23794:23797 Basics <> bool ind
R23807:23813 Basics <> beq_nat def
R23816:23821 Poly <> length def
R23823:23823 Poly <> l:105 var
def 23844:23855 <> test_filter2
R23936:23943 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23865:23870 Poly <> filter def
R23898:23899 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23906:23907 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23911:23912 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23916:23917 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23925:23926 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23929:23930 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23934:23935 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23900:23900 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23902:23903 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23905:23905 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23908:23908 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23910:23910 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23913:23913 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23915:23915 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23918:23918 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23920:23920 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23922:23922 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23924:23924 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23927:23928 Poly <> :::'['_']' not
R23931:23931 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23933:23933 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23872:23882 Poly <> length_is_1 def
R23944:23945 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23949:23950 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23954:23955 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23959:23960 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23946:23946 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23948:23948 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23951:23951 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23953:23953 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23956:23956 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23958:23958 Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 24137:24152 <> countoddmembers'
R24157:24160 Poly <> list ind
R24162:24164 Coq.Init.Datatypes <> nat ind
binder 24155:24155 <> l:106
R24169:24171 Coq.Init.Datatypes <> nat ind
R24181:24186 Poly <> length def
R24189:24194 Poly <> filter def
R24201:24201 Poly <> l:106 var
R24196:24199 Basics <> oddb def
def 24220:24241 <> test_countoddmembers'1
R24276:24278 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24246:24261 Poly <> countoddmembers' def
R24263:24263 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24265:24265 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24267:24267 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24269:24269 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24271:24271 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24273:24273 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24275:24275 Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 24322:24343 <> test_countoddmembers'2
R24372:24374 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24348:24363 Poly <> countoddmembers' def
R24365:24365 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24367:24367 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24369:24369 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24371:24371 Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 24418:24439 <> test_countoddmembers'3
R24464:24466 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24444:24459 Poly <> countoddmembers' def
R24461:24463 Poly <> nil constr
def 25302:25315 <> test_anon_fun'
R25352:25354 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25323:25332 Poly <> doit3times def
binder 25339:25339 <> n:107
R25345:25347 Basics <> ::nat_scope:x_'*'_x not
R25344:25344 Poly <> n:107 var
R25348:25348 Poly <> n:107 var
def 25622:25634 <> test_filter2'
R25735:25742 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25644:25649 Poly <> filter def
R25697:25698 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25705:25706 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25710:25711 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25715:25716 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25724:25725 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25728:25729 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25733:25734 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25699:25699 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25701:25702 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25704:25704 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25707:25707 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25709:25709 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25712:25712 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25714:25714 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25717:25717 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25719:25719 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25721:25721 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25723:25723 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25726:25727 Poly <> :::'['_']' not
R25730:25730 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25732:25732 Poly <> :::'['_x_';'_'..'_';'_x_']' not
binder 25656:25656 <> l:108
R25661:25667 Basics <> beq_nat def
R25670:25675 Poly <> length def
R25677:25677 Poly <> l:108 var
R25743:25744 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25748:25749 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25753:25754 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25758:25759 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25745:25745 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25747:25747 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25750:25750 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25752:25752 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25755:25755 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25757:25757 Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 26088:26102 <> filter_even_gt7
R26109:26112 Poly <> list ind
R26114:26116 Coq.Init.Datatypes <> nat ind
binder 26105:26105 <> l:109
R26121:26124 Poly <> list ind
R26126:26128 Coq.Init.Datatypes <> nat ind
R26138:26143 Poly <> filter def
R26185:26185 Poly <> l:109 var
binder 26150:26150 <> n:110
R26169:26173 Basics <> :::x_'&&'_x not
R26181:26181 Basics <> :::x_'&&'_x not
R26156:26159 Basics <> negb def
R26162:26165 Basics <> oddb def
R26167:26167 Poly <> n:110 var
R26174:26176 Basics <> leb def
R26180:26180 Poly <> n:110 var
def 26200:26221 <> test_filter_even_gt7_1
R26265:26267 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26230:26244 Poly <> filter_even_gt7 def
R26246:26246 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26248:26248 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26250:26250 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26252:26252 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26254:26254 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26257:26257 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26259:26259 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26262:26262 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26264:26264 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26268:26268 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26271:26271 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26274:26274 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26276:26276 Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 26330:26351 <> test_filter_even_gt7_2
R26390:26392 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26360:26374 Poly <> filter_even_gt7 def
R26376:26376 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26378:26378 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26380:26380 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26382:26382 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26385:26385 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26389:26389 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26393:26394 Poly <> :::'['_']' not
def 27112:27120 <> partition
binder 27123:27123 <> X:111
R27166:27169 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27165:27165 Poly <> X:111 var
R27170:27173 Basics <> bool ind
binder 27158:27161 <> test:112
R27205:27208 Poly <> list ind
R27210:27210 Poly <> X:111 var
binder 27201:27201 <> l:113
R27243:27245 Poly <> ::type_scope:x_'*'_x not
R27237:27240 Poly <> list ind
R27242:27242 Poly <> X:111 var
R27246:27249 Poly <> list ind
R27251:27251 Poly <> X:111 var
R27259:27259 Poly <> :::'('_x_','_x_')' not
R27273:27274 Poly <> :::'('_x_','_x_')' not
R27308:27308 Poly <> :::'('_x_','_x_')' not
R27260:27265 Poly <> filter def
R27272:27272 Poly <> l:113 var
R27267:27270 Poly <> test:112 var
R27275:27280 Poly <> filter def
R27307:27307 Poly <> l:113 var
binder 27287:27287 <> x:114
R27292:27295 Basics <> negb def
R27298:27301 Poly <> test:112 var
R27303:27303 Poly <> x:114 var
def 27326:27340 <> test_partition1
R27369:27371 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27343:27351 Poly <> partition def
R27358:27358 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27360:27360 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27362:27362 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27364:27364 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27366:27366 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27368:27368 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27353:27356 Basics <> oddb def
R27372:27372 Poly <> :::'('_x_','_x_')' not
R27380:27381 Poly <> :::'('_x_','_x_')' not
R27387:27387 Poly <> :::'('_x_','_x_')' not
R27373:27373 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27375:27375 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27377:27377 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27379:27379 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27382:27382 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27384:27384 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27386:27386 Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 27429:27443 <> test_partition2
R27480:27482 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27446:27454 Poly <> partition def
R27473:27473 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27475:27475 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27477:27477 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27479:27479 Poly <> :::'['_x_';'_'..'_';'_x_']' not
binder 27461:27461 <> x:115
R27466:27470 Basics <> false constr
R27483:27483 Poly <> :::'('_x_','_x_')' not
R27486:27487 Poly <> :::'('_x_','_x_')' not
R27495:27495 Poly <> :::'('_x_','_x_')' not
R27484:27485 Poly <> :::'['_']' not
R27488:27488 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27490:27490 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27492:27492 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27494:27494 Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 27718:27720 <> map
binder 27723:27723 <> X:116
binder 27725:27725 <> Y:117
R27737:27738 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27736:27736 Poly <> X:116 var
R27739:27739 Poly <> Y:117 var
binder 27734:27734 <> f:118
R27745:27748 Poly <> list ind
R27750:27750 Poly <> X:116 var
binder 27743:27743 <> l:119
R27756:27759 Poly <> list ind
R27761:27761 Poly <> Y:117 var
R27778:27778 Poly <> l:119 var
R27792:27793 Poly <> :::'['_']' not
R27802:27803 Poly <> :::'['_']' not
R27813:27816 Poly <> :::x_'::'_x not
R27822:27822 Poly <> :::x_'::'_x not
R27826:27831 Poly <> :::x_'::'_x not
R27839:27839 Poly <> :::x_'::'_x not
R27823:27823 Poly <> f:118 var
R27832:27834 Poly <> map:120 def
R27836:27836 Poly <> f:118 var
def 28077:28085 <> test_map1
R28119:28121 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28088:28090 Poly <> map def
R28112:28112 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28114:28114 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28116:28116 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28118:28118 Poly <> :::'['_x_';'_'..'_';'_x_']' not
binder 28097:28097 <> x:122
R28102:28105 Coq.Init.Peano <> plus syndef
R28109:28109 Poly <> x:122 var
R28122:28122 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28124:28124 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28126:28126 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28128:28128 Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 28446:28454 <> test_map2
R28480:28482 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28462:28464 Poly <> map def
R28471:28471 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28473:28473 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28475:28475 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28477:28477 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28479:28479 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28466:28469 Basics <> oddb def
R28483:28483 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28489:28489 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28494:28494 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28500:28500 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28505:28505 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28484:28488 Basics <> false constr
R28490:28493 Basics <> true constr
R28495:28499 Basics <> false constr
R28501:28504 Basics <> true constr
def 28715:28723 <> test_map3
R28774:28781 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28733:28735 Poly <> map def
R28765:28765 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28767:28767 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28769:28769 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28771:28771 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28773:28773 Poly <> :::'['_x_';'_'..'_';'_x_']' not
binder 28742:28742 <> n:123
R28747:28747 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28755:28755 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28762:28762 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28748:28752 Basics <> evenb def
R28754:28754 Poly <> n:123 var
R28756:28759 Basics <> oddb def
R28761:28761 Poly <> n:123 var
R28782:28782 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28795:28795 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28808:28808 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28821:28821 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28834:28834 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28783:28783 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28788:28788 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28794:28794 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28784:28787 Basics <> true constr
R28789:28793 Basics <> false constr
R28796:28796 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28802:28802 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28807:28807 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28797:28801 Basics <> false constr
R28803:28806 Basics <> true constr
R28809:28809 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28814:28814 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28820:28820 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28810:28813 Basics <> true constr
R28815:28819 Basics <> false constr
R28822:28822 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28828:28828 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28833:28833 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28823:28827 Basics <> false constr
R28829:28832 Basics <> true constr
prf 29126:29132 <> map_dis
binder 29144:29144 <> X:124
binder 29146:29146 <> Y:125
R29162:29165 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29161:29161 Poly <> X:124 var
R29166:29166 Poly <> Y:125 var
binder 29157:29157 <> f:126
R29174:29177 Poly <> list ind
R29179:29179 Poly <> X:124 var
binder 29170:29170 <> l:127
R29187:29187 Poly <> X:124 var
binder 29183:29183 <> x:128
R29211:29213 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29195:29197 Poly <> map def
R29203:29206 Poly <> :::x_'++'_x not
R29202:29202 Poly <> l:127 var
R29207:29207 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R29209:29209 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R29208:29208 Poly <> x:128 var
R29199:29199 Poly <> f:126 var
R29221:29224 Poly <> :::x_'++'_x not
R29214:29216 Poly <> map def
R29220:29220 Poly <> l:127 var
R29218:29218 Poly <> f:126 var
R29225:29225 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R29229:29229 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R29226:29226 Poly <> f:126 var
R29228:29228 Poly <> x:128 var
prf 29388:29394 <> map_rev
binder 29406:29406 <> X:129
binder 29408:29408 <> Y:130
R29424:29427 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29423:29423 Poly <> X:129 var
R29428:29428 Poly <> Y:130 var
binder 29419:29419 <> f:131
R29436:29439 Poly <> list ind
R29441:29441 Poly <> X:129 var
binder 29432:29432 <> l:132
R29463:29465 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29450:29452 Poly <> map def
R29457:29459 Poly <> rev def
R29461:29461 Poly <> l:132 var
R29454:29454 Poly <> f:131 var
R29466:29468 Poly <> rev def
R29471:29473 Poly <> map def
R29477:29477 Poly <> l:132 var
R29475:29475 Poly <> f:131 var
R29613:29619 Poly <> map_dis thm
R29613:29619 Poly <> map_dis thm
R29613:29619 Poly <> map_dis thm
def 30168:30175 <> flat_map
binder 30178:30178 <> X:133
binder 30180:30180 <> Y:134
R30192:30195 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30191:30191 Poly <> X:133 var
R30196:30199 Poly <> list ind
R30201:30201 Poly <> Y:134 var
binder 30189:30189 <> f:135
R30207:30210 Poly <> list ind
R30212:30212 Poly <> X:133 var
binder 30205:30205 <> l:136
R30240:30243 Poly <> list ind
R30245:30245 Poly <> Y:134 var
R30261:30261 Poly <> l:136 var
R30274:30275 Poly <> :::'['_']' not
R30280:30281 Poly <> :::'['_']' not
R30290:30293 Poly <> :::x_'::'_x not
R30299:30299 Poly <> :::x_'++'_x not
R30303:30308 Poly <> :::x_'++'_x not
R30321:30321 Poly <> :::x_'++'_x not
R30300:30300 Poly <> f:135 var
R30309:30316 Poly <> flat_map:137 def
R30318:30318 Poly <> f:135 var
def 30347:30360 <> test_flat_map1
R30403:30410 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30368:30375 Poly <> flat_map def
R30396:30396 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30398:30398 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30400:30400 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30402:30402 Poly <> :::'['_x_';'_'..'_';'_x_']' not
binder 30382:30382 <> n:139
R30387:30387 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30389:30389 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30391:30391 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30393:30393 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30388:30388 Poly <> n:139 var
R30390:30390 Poly <> n:139 var
R30392:30392 Poly <> n:139 var
R30411:30411 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30413:30414 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30416:30417 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30419:30420 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30422:30423 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30425:30426 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30428:30429 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30431:30432 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30434:30435 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R30437:30437 Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 30679:30688 <> option_map
binder 30691:30691 <> X:140
binder 30693:30693 <> Y:141
R30709:30712 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30708:30708 Poly <> X:140 var
R30713:30713 Poly <> Y:141 var
binder 30704:30704 <> f:142
R30722:30727 Poly <> option ind
R30729:30729 Poly <> X:140 var
binder 30717:30718 <> xo:143
R30759:30764 Poly <> option ind
R30766:30766 Poly <> Y:141 var
R30782:30783 Poly <> xo:143 var
R30799:30802 Poly <> None constr
R30807:30810 Poly <> None constr
R30821:30824 Poly <> Some constr
R30831:30834 Poly <> Some constr
R30837:30837 Poly <> f:142 var
def 31730:31733 <> fold
binder 31736:31736 <> X:145
binder 31738:31738 <> Y:146
R31751:31752 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31750:31750 Poly <> X:145 var
R31754:31755 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31753:31753 Poly <> Y:146 var
R31756:31756 Poly <> Y:146 var
binder 31747:31747 <> f:147
R31762:31765 Poly <> list ind
R31767:31767 Poly <> X:145 var
binder 31760:31760 <> l:148
R31773:31773 Poly <> Y:146 var
binder 31771:31771 <> b:149
R31806:31806 Poly <> Y:146 var
R31822:31822 Poly <> l:148 var
R31836:31838 Poly <> nil constr
R31843:31843 Poly <> b:149 var
R31853:31856 Poly <> :::x_'::'_x not
R31862:31862 Poly <> f:147 var
R31867:31870 Poly <> fold:150 def
R31876:31876 Poly <> b:149 var
R31872:31872 Poly <> f:147 var
R32405:32408 Poly <> fold def
R32410:32413 Basics <> andb def
def 32484:32496 <> fold_example1
R32526:32528 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32505:32508 Poly <> fold def
R32515:32515 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32517:32517 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32519:32519 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32521:32521 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32523:32523 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32510:32513 Coq.Init.Peano <> mult syndef
def 32576:32588 <> fold_example2
R32634:32636 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32597:32600 Poly <> fold def
R32630:32633 Basics <> true constr
R32607:32607 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32612:32612 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32617:32617 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32623:32623 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32628:32628 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32608:32611 Basics <> true constr
R32613:32616 Basics <> true constr
R32618:32622 Basics <> false constr
R32624:32627 Basics <> true constr
R32602:32605 Basics <> andb def
R32637:32641 Basics <> false constr
def 32687:32699 <> fold_example3
R32739:32741 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32708:32711 Poly <> fold def
R32737:32738 Poly <> :::'['_']' not
R32718:32718 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32722:32722 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32725:32725 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32731:32731 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32735:32735 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32719:32719 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32721:32721 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32723:32724 Poly <> :::'['_']' not
R32726:32726 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32728:32728 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32730:32730 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32732:32732 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32734:32734 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32713:32715 Poly <> app def
R32742:32742 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32744:32744 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32746:32746 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32748:32748 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R32750:32750 Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 33767:33774 <> constfun
binder 33777:33777 <> X:152
R33790:33790 Poly <> X:152 var
binder 33787:33787 <> x:153
R33798:33799 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33795:33797 Coq.Init.Datatypes <> nat ind
R33800:33800 Poly <> X:152 var
R33817:33819 Coq.Init.Datatypes <> nat ind
binder 33815:33815 <> k:154
R33825:33825 Poly <> x:153 var
def 33846:33850 <> ftrue
R33855:33862 Poly <> constfun def
R33864:33867 Basics <> true constr
def 33885:33901 <> constfun_example1
R33912:33914 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33905:33909 Poly <> ftrue def
R33915:33918 Basics <> true constr
def 33964:33980 <> constfun_example2
R33999:34001 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33985:33992 Poly <> constfun def
R34224:34227 Coq.Init.Peano <> plus syndef
def 34877:34881 <> plus3
R34886:34889 Coq.Init.Peano <> plus syndef
R34903:34907 Poly <> plus3 def
def 34925:34934 <> test_plus3
R34948:34950 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34941:34945 Poly <> plus3 def
def 34994:35004 <> test_plus3'
R35028:35030 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35010:35019 Poly <> doit3times def
R35021:35025 Poly <> plus3 def
def 35074:35085 <> test_plus3''
R35111:35113 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35090:35099 Poly <> doit3times def
R35102:35105 Coq.Init.Peano <> plus syndef
mod 35272:35280 <> Exercises
def 35500:35510 Exercises fold_length
binder 35513:35513 <> X:155
R35528:35531 Poly <> list ind
R35533:35533 Poly <> X:155 var
binder 35524:35524 <> l:156
R35538:35540 Coq.Init.Datatypes <> nat ind
R35550:35553 Poly <> fold def
R35572:35572 Poly <> l:156 var
binder 35562:35562 <> n:157
R35567:35567 Coq.Init.Datatypes <> S constr
R35569:35569 Poly <> n:157 var
def 35592:35608 Exercises test_fold_length1
R35631:35633 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35612:35622 Poly Exercises fold_length def
R35624:35624 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R35626:35626 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R35628:35628 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R35630:35630 Poly <> :::'['_x_';'_'..'_';'_x_']' not
prf 35734:35752 Exercises fold_length_correct
binder 35763:35763 <> X:158
R35770:35773 Poly <> list ind
R35775:35775 Poly <> X:158 var
binder 35766:35766 <> l:159
R35797:35799 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35784:35794 Poly Exercises fold_length def
R35796:35796 Poly <> l:159 var
R35800:35805 Poly <> length def
R35807:35807 Poly <> l:159 var
def 36126:36133 Exercises fold_map
binder 36136:36136 <> X:160
binder 36138:36138 <> Y:161
R36152:36155 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36151:36151 Poly <> X:160 var
R36156:36156 Poly <> Y:161 var
binder 36147:36147 <> f:162
R36164:36167 Poly <> list ind
R36169:36169 Poly <> X:160 var
binder 36160:36160 <> l:163
R36174:36177 Poly <> list ind
R36179:36179 Poly <> Y:161 var
R36189:36192 Poly <> fold def
R36222:36223 Poly <> :::'['_']' not
R36220:36220 Poly <> l:163 var
binder 36199:36199 <> n:164
binder 36201:36201 <> p:165
R36207:36207 Poly <> :::x_'::'_x not
R36211:36215 Poly <> :::x_'::'_x not
R36208:36208 Poly <> f:162 var
R36210:36210 Poly <> n:164 var
R36216:36216 Poly <> p:165 var
prf 36380:36395 Exercises fold_map_correct
binder 36407:36407 <> X:166
binder 36409:36409 <> Y:167
R36425:36428 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36424:36424 Poly <> X:166 var
R36429:36429 Poly <> Y:167 var
binder 36420:36420 <> f:168
R36437:36440 Poly <> list ind
R36442:36442 Poly <> X:166 var
binder 36433:36433 <> l:169
R36462:36464 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36450:36457 Poly Exercises fold_map def
R36461:36461 Poly <> l:169 var
R36459:36459 Poly <> f:168 var
R36465:36467 Poly <> map def
R36471:36471 Poly <> l:169 var
R36469:36469 Poly <> f:168 var
def 37472:37481 Exercises prod_curry
binder 37484:37484 <> X:170
binder 37486:37486 <> Y:171
binder 37488:37488 <> Z:172
R37513:37516 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37509:37511 Poly <> ::type_scope:x_'*'_x not
R37508:37508 Poly <> X:170 var
R37512:37512 Poly <> Y:171 var
R37517:37517 Poly <> Z:172 var
binder 37504:37504 <> f:173
R37525:37525 Poly <> X:170 var
binder 37521:37521 <> x:174
R37533:37533 Poly <> Y:171 var
binder 37529:37529 <> y:175
R37538:37538 Poly <> Z:172 var
R37543:37543 Poly <> f:173 var
R37545:37545 Poly <> :::'('_x_','_x_')' not
R37547:37548 Poly <> :::'('_x_','_x_')' not
R37550:37550 Poly <> :::'('_x_','_x_')' not
R37546:37546 Poly <> x:174 var
R37549:37549 Poly <> y:175 var
def 37710:37721 Exercises prod_uncurry
binder 37724:37724 <> X:176
binder 37726:37726 <> Y:177
binder 37728:37728 <> Z:178
R37749:37752 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37748:37748 Poly <> X:176 var
R37754:37757 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37753:37753 Poly <> Y:177 var
R37758:37758 Poly <> Z:178 var
binder 37744:37744 <> f:179
R37767:37769 Poly <> ::type_scope:x_'*'_x not
R37766:37766 Poly <> X:176 var
R37770:37770 Poly <> Y:177 var
binder 37762:37762 <> p:180
R37775:37775 Poly <> Z:178 var
R37785:37785 Poly <> f:179 var
R37796:37798 Poly <> snd def
R37800:37800 Poly <> p:180 var
R37788:37790 Poly <> fst def
R37792:37792 Poly <> p:180 var
def 37958:37966 Exercises test_map2
R38000:38002 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37969:37971 Poly <> map def
R37993:37993 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R37995:37995 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R37997:37997 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R37999:37999 Poly <> :::'['_x_';'_'..'_';'_x_']' not
binder 37978:37978 <> x:181
R37983:37986 Coq.Init.Peano <> plus syndef
R37990:37990 Poly <> x:181 var
R38003:38003 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R38005:38005 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R38007:38007 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R38009:38009 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R38197:38206 Poly Exercises prod_curry def
R38219:38230 Poly Exercises prod_uncurry def
prf 38248:38260 Exercises uncurry_curry
binder 38272:38272 <> X:182
binder 38274:38274 <> Y:183
binder 38276:38276 <> Z:184
R38319:38322 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38318:38318 Poly <> X:182 var
R38324:38327 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38323:38323 Poly <> Y:183 var
R38328:38328 Poly <> Z:184 var
binder 38314:38314 <> f:185
binder 38358:38358 <> x:186
binder 38360:38360 <> y:187
R38399:38401 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38368:38377 Poly Exercises prod_curry def
R38398:38398 Poly <> y:187 var
R38396:38396 Poly <> x:186 var
R38380:38391 Poly Exercises prod_uncurry def
R38393:38393 Poly <> f:185 var
R38402:38402 Poly <> f:185 var
R38406:38406 Poly <> y:187 var
R38404:38404 Poly <> x:186 var
prf 38486:38498 Exercises curry_uncurry
binder 38510:38510 <> X:188
binder 38512:38512 <> Y:189
binder 38514:38514 <> Z:190
R38556:38556 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38562:38566 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38558:38560 Poly <> ::type_scope:x_'*'_x not
R38557:38557 Poly <> X:188 var
R38561:38561 Poly <> Y:189 var
R38567:38567 Poly <> Z:190 var
binder 38552:38552 <> f:191
R38576:38578 Poly <> ::type_scope:x_'*'_x not
R38575:38575 Poly <> X:188 var
R38579:38579 Poly <> Y:189 var
binder 38571:38571 <> p:192
R38617:38619 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38588:38599 Poly Exercises prod_uncurry def
R38616:38616 Poly <> p:192 var
R38602:38611 Poly Exercises prod_curry def
R38613:38613 Poly <> f:191 var
R38620:38620 Poly <> f:191 var
R38622:38622 Poly <> p:192 var
mod 39782:39787 <> Exercises.Church
def 39804:39806 Exercises.Church nat
binder 39818:39818 <> X:193
R39828:39828 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39835:39839 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39830:39833 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39829:39829 Poly <> X:193 var
R39834:39834 Poly <> X:193 var
R39841:39844 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39840:39840 Poly <> X:193 var
R39845:39845 Poly <> X:193 var
def 40016:40018 Exercises.Church one
R40022:40024 Poly Exercises.Church nat def
binder 40039:40039 <> X:194
R40055:40058 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40054:40054 Poly <> X:194 var
R40059:40059 Poly <> X:194 var
binder 40050:40050 <> f:195
R40067:40067 Poly <> X:194 var
binder 40063:40063 <> x:196
R40073:40073 Poly <> f:195 var
R40075:40075 Poly <> x:196 var
def 40167:40169 Exercises.Church two
R40173:40175 Poly Exercises.Church nat def
binder 40190:40190 <> X:197
R40206:40209 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40205:40205 Poly <> X:197 var
R40210:40210 Poly <> X:197 var
binder 40201:40201 <> f:198
R40218:40218 Poly <> X:197 var
binder 40214:40214 <> x:199
R40224:40224 Poly <> f:198 var
R40227:40227 Poly <> f:198 var
R40229:40229 Poly <> x:199 var
def 40427:40430 Exercises.Church zero
R40434:40436 Poly Exercises.Church nat def
binder 40451:40451 <> X:200
R40467:40470 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40466:40466 Poly <> X:200 var
R40471:40471 Poly <> X:200 var
binder 40462:40462 <> f:201
R40479:40479 Poly <> X:200 var
binder 40475:40475 <> x:202
R40485:40485 Poly <> x:202 var
def 40781:40785 Exercises.Church three
R40789:40791 Poly Exercises.Church nat def
R40797:40806 Poly <> doit3times def
def 41035:41038 Exercises.Church succ
R41045:41047 Poly Exercises.Church nat def
binder 41041:41041 <> n:203
R41052:41054 Poly Exercises.Church nat def
binder 41068:41068 <> X:204
R41084:41087 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41083:41083 Poly <> X:204 var
R41088:41088 Poly <> X:204 var
binder 41079:41079 <> f:205
R41096:41096 Poly <> X:204 var
binder 41092:41092 <> x:206
R41102:41102 Poly <> f:205 var
R41105:41105 Poly <> n:203 var
R41107:41107 Poly <> X:204 var
R41109:41109 Poly <> f:205 var
R41111:41111 Poly <> x:206 var
def 41129:41134 Exercises.Church succ_1
R41147:41149 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41138:41141 Poly Exercises.Church succ def
R41143:41146 Poly Exercises.Church zero def
R41150:41152 Poly Exercises.Church one def
def 41203:41208 Exercises.Church succ_2
R41220:41222 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41212:41215 Poly Exercises.Church succ def
R41217:41219 Poly Exercises.Church one def
R41223:41225 Poly Exercises.Church two def
def 41280:41285 Exercises.Church succ_3
R41297:41299 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41289:41292 Poly Exercises.Church succ def
R41294:41296 Poly Exercises.Church two def
R41300:41304 Poly Exercises.Church three def
def 41410:41413 Exercises.Church plus
R41422:41424 Poly Exercises.Church nat def
binder 41416:41416 <> n:207
binder 41418:41418 <> m:208
R41429:41431 Poly Exercises.Church nat def
binder 41446:41446 <> X:209
R41462:41465 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41461:41461 Poly <> X:209 var
R41466:41466 Poly <> X:209 var
binder 41457:41457 <> f:210
R41474:41474 Poly <> X:209 var
binder 41470:41470 <> x:211
R41480:41480 Poly <> n:207 var
R41482:41482 Poly <> X:209 var
R41484:41484 Poly <> f:210 var
R41487:41487 Poly <> m:208 var
R41489:41489 Poly <> X:209 var
R41491:41491 Poly <> f:210 var
R41493:41493 Poly <> x:211 var
def 41512:41517 Exercises.Church plus_1
R41534:41536 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41521:41524 Poly Exercises.Church plus def
R41526:41529 Poly Exercises.Church zero def
R41531:41533 Poly Exercises.Church one def
R41537:41539 Poly Exercises.Church one def
def 41594:41599 Exercises.Church plus_2
R41617:41619 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41603:41606 Poly Exercises.Church plus def
R41608:41610 Poly Exercises.Church two def
R41612:41616 Poly Exercises.Church three def
R41620:41623 Poly Exercises.Church plus def
R41625:41629 Poly Exercises.Church three def
R41631:41633 Poly Exercises.Church two def
def 41687:41692 Exercises.Church plus_3
R41726:41728 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41701:41704 Poly Exercises.Church plus def
R41707:41710 Poly Exercises.Church plus def
R41712:41714 Poly Exercises.Church two def
R41716:41718 Poly Exercises.Church two def
R41721:41725 Poly Exercises.Church three def
R41729:41732 Poly Exercises.Church plus def
R41734:41736 Poly Exercises.Church one def
R41739:41742 Poly Exercises.Church plus def
R41744:41748 Poly Exercises.Church three def
R41750:41754 Poly Exercises.Church three def
def 41843:41846 Exercises.Church mult
R41855:41857 Poly Exercises.Church nat def
binder 41849:41849 <> n:212
binder 41851:41851 <> m:213
R41862:41864 Poly Exercises.Church nat def
binder 41879:41879 <> X:214
R41895:41898 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41894:41894 Poly <> X:214 var
R41899:41899 Poly <> X:214 var
binder 41890:41890 <> f:215
R41907:41907 Poly <> X:214 var
binder 41903:41903 <> x:216
R41913:41913 Poly <> n:212 var
R41915:41915 Poly <> X:214 var
R41918:41918 Poly <> m:213 var
R41920:41920 Poly <> X:214 var
R41922:41922 Poly <> f:215 var
R41925:41925 Poly <> x:216 var
def 41943:41948 Exercises.Church mult_1
R41964:41966 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41952:41955 Poly Exercises.Church mult def
R41957:41959 Poly Exercises.Church one def
R41961:41963 Poly Exercises.Church one def
R41967:41969 Poly Exercises.Church one def
def 42023:42028 Exercises.Church mult_2
R42060:42062 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42032:42035 Poly Exercises.Church mult def
R42037:42040 Poly Exercises.Church zero def
R42043:42046 Poly Exercises.Church plus def
R42048:42052 Poly Exercises.Church three def
R42054:42058 Poly Exercises.Church three def
R42063:42066 Poly Exercises.Church zero def
def 42121:42126 Exercises.Church mult_3
R42144:42146 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42130:42133 Poly Exercises.Church mult def
R42135:42137 Poly Exercises.Church two def
R42139:42143 Poly Exercises.Church three def
R42147:42150 Poly Exercises.Church plus def
R42152:42156 Poly Exercises.Church three def
R42158:42162 Poly Exercises.Church three def
def 42519:42521 Exercises.Church exp
R42530:42532 Poly Exercises.Church nat def
binder 42524:42524 <> n:217
binder 42526:42526 <> m:218
R42537:42539 Poly Exercises.Church nat def
binder 42554:42554 <> X:219
R42570:42573 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42569:42569 Poly <> X:219 var
R42574:42574 Poly <> X:219 var
binder 42565:42565 <> f:220
R42582:42582 Poly <> X:219 var
binder 42578:42578 <> x:221
R42597:42597 Poly <> m:218 var
R42601:42604 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42600:42600 Poly <> X:219 var
R42605:42605 Poly <> X:219 var
R42609:42609 Poly <> n:217 var
R42611:42611 Poly <> X:219 var
R42614:42614 Poly <> f:220 var
R42616:42616 Poly <> x:221 var
def 42634:42638 Exercises.Church exp_1
R42653:42655 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42642:42644 Poly Exercises.Church exp def
R42646:42648 Poly Exercises.Church two def
R42650:42652 Poly Exercises.Church two def
R42656:42659 Poly Exercises.Church plus def
R42661:42663 Poly Exercises.Church two def
R42665:42667 Poly Exercises.Church two def
def 42723:42727 Exercises.Church exp_2
R42744:42746 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42731:42733 Poly Exercises.Church exp def
R42735:42739 Poly Exercises.Church three def
R42741:42743 Poly Exercises.Church two def
R42747:42750 Poly Exercises.Church plus def
R42753:42756 Poly Exercises.Church mult def
R42758:42760 Poly Exercises.Church two def
R42763:42766 Poly Exercises.Church mult def
R42768:42770 Poly Exercises.Church two def
R42772:42774 Poly Exercises.Church two def
R42778:42780 Poly Exercises.Church one def
def 42836:42840 Exercises.Church exp_3
R42858:42860 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42844:42846 Poly Exercises.Church exp def
R42848:42852 Poly Exercises.Church three def
R42854:42857 Poly Exercises.Church zero def
R42861:42863 Poly Exercises.Church one def
R42915:42920 Poly Exercises.Church <> mod
R42947:42955 Poly Exercises <> mod
